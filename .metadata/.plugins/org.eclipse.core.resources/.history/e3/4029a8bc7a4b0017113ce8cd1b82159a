package monopoli;

import static org.junit.Assert.*;

import java.util.Arrays;
import java.util.Collection;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameter;
import org.junit.runners.Parameterized.Parameters;

@RunWith(Parameterized.class)
public class Propriet‡Test {
	Propriet‡ p,p1,p2,p3,p4; Banca B;
	@Parameter(0) public int var1;
	@Parameter(1) public int var2;
	@Parameter(2) public int var3;
	@Parameter(3) public int var4;
	@Parameter(4) public int var5;
	@Before
	public void setUp() throws Exception {
		p = new Propriet‡(1,"Via gatto",500,var1,500,1);
		p1 = new Propriet‡(2,"via 1",500,var2,500,1);
		p2 = new Propriet‡(3,"via 2",500,var3,500,1);
		p3 = new Propriet‡(4,"via 3",500,var4,500,1);
		p4 = new Propriet‡(5,"via 4",500,var5,500,1);
	}
	@Parameters
	public static Collection<Integer[]> data(){
		return Arrays.asList(new Integer[][] {
			{1,1,2,2,3},
			{3,3,3,11,2},
			{11,11,1,2,3},
			{10,10,10,10,2},
			{8,8,2,6,11},
			
		});
	}
	@Test
	public void isZonaCompletaTrue(){
		Giocatore g = new Giocatore("g1","");
		g.setSoldi(800000);
		System.out.println(var1);
		p.compra(g); p1.compra(g);p3.compra(g);p4.compra(g);p2.compra(g);
		assertTrue(p.isZonaCompleta(g));
		
	}
	@Ignore
	public void testPagaAffitto() {
		Giocatore g = new Giocatore("pino", "bussola");
		Giocatore g2 = new Giocatore("alfredo", "mazza");
		g.setSoldi(500);
		p.compra(g);
		g2.setSoldi(10000);
		g.setSoldi(500);
		p.pagaAffitto(g2);
		assertEquals(9500,g2.getSoldi());
		assertEquals(1000,g.getSoldi());
	}
	@Test
	public void TestCompraSufficienti(){
		Giocatore g = new Giocatore("pino", "bussola");
		g.setSoldi(1000);
		p.compra(g);
		assertEquals(500,g.getSoldi());
		assertNotNull(g.getListOfProperties());
	}
	@Test
	public void TestCompraNonSufficienti(){
		Giocatore g = new Giocatore("pino", "bussola");
		g.setSoldi(400);
		p.compra(g);
		assertEquals(400,g.getSoldi());
		assertEquals(0,g.getListOfProperties().size());
	}
}
