package monopoli;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;
import org.junit.runners.Parameterized.Parameter;
import org.junit.runners.Parameterized.Parameters;

import static org.mockito.Mockito.*;

import java.util.Arrays;
import java.util.Collection;

public class PedinaTest {
	Pedina p; Tabellone tab;
	
	@Parameter(0) public int expected;
	 @Parameter(1) public int input1;
	 @Parameter(2) public int input2;
	@Before
	public void setUp() throws Exception {
		p = new Pedina("fungo");
		
		tab = new Tabellone();
		
	}
	/*@Parameters
	public static Collection<Integer[]> data(){
		return Arrays.asList(new Integer[][] {
			{5,2,3},
			{4,2,2}
			
		});
	}*/
	@Test
	public void testMuoviStandard() {
		Giocatore mockPlayer = mock(Giocatore.class);
		p.setProprietario(mockPlayer);
		
		when(mockPlayer.tiradado1()).thenReturn(2);
		when(mockPlayer.tiradado2()).thenReturn(3);
		when(mockPlayer.makeSum(2,3)).thenReturn(5);
		p.muovi();
		System.out.println(p.getPosizione().getNome());
		assertEquals(p.getPosizione().getNome(), tab.getCasella(5).getNome());
	}
	@Test
	public void testMuoviDoppio(){
		Giocatore mockPlayer = mock(Giocatore.class);
		p.setProprietario(mockPlayer);
		
		when(mockPlayer.tiradado1()).thenReturn(2);
		when(mockPlayer.tiradado2()).thenReturn(2);
		when(mockPlayer.makeSum(2,2)).thenReturn(4);
		p.muovi();
		assertEquals(p.getPosizione().getNome(), tab.getCasella(4).getNome());
	}
	
	
	
}

